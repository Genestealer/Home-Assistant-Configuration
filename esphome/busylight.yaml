#***************************************************
#   BusyLight Presence Indicator
#     Light Component
#   Richard Huish 2020
#   I built so my family can know when I'm busy and working in my Home Office.
#   ESP8266 based with local home-assistant.io GUI with controller with physical buttons and mini display
#   See busylight_controller.yaml for Controller Component
#   ----------
#   Github: https://github.com/genestealer/Home-Assistant-Configuration/tree/master/esphome
#   ----------
#   GUI: Locally hosted home assistant on network https://www.home-assistant.io/
#   API: Locally hosted native API component https://esphome.io/components/api.html
#   OTA updates: https://esphome.io/components/ota.html
#   ----------
#   The circuit:
#     Adafruit Feather HUZZAH with ESP8266 https://www.adafruit.com/product/2821
#     Breadboard-friendly RGB Smart NeoPixel https://www.adafruit.com/product/1312
#     4-channel I2C-safe Bi-directional Logic Level Converter - BSS138 https://www.adafruit.com/product/757
#     Ping pong ball to diffuse 
#   Inputs:
#     BusyLight Presence Indicator Controller via Home Assistant
#   Outputs:
#     NeoPixel, via Logic Level Converter as NeoPixel needs 5V and ESP8266 is 3.3V.
####################################################
# Config Header for Device
####################################################
substitutions:
  devicename: busylight01
  upper_devicename: Busy Light 1
  ip: 192.168.2.33
  pass: hxN#^fPPv5ZRy%7l
  
####################################################
# Shared code from all my projects
####################################################
esphome:
  name: $devicename
  platform: ESP8266
  board: huzzah
wifi:
  ssid: !secret IoT_VLAN_SSID
  password: !secret IoT_VLAN_SSID_Key
  manual_ip:
    static_ip: $ip
    gateway: 192.168.2.1
    subnet: 255.255.255.0

logger: # Enable logging

api: # Enable Home Assistant API
  password: $pass

ota: # Enable over the air updates
  password: $pass

status_led:
  pin:
    number: LED_RED
    # inverted: True

####################################################
# Non-Shared Code (May contain shared code)
####################################################  
binary_sensor:
  - platform: status
    name:  ${upper_devicename} Status

  - platform: gpio
    pin: 13
    name: "Kichen PIR Sensor"
    device_class: motion
    on_press:
      then:
        - light.toggle: busylight

switch:
  - platform: gpio
    pin:
      number: 12
      mode: OUTPUT
    id: PIR_PWR
    restore_mode: ALWAYS_ON 
    
output:
  - platform: gpio
    pin:
      number: 15
      mode: OUTPUT_OPEN_DRAIN
    id: PIR_GND
    
    
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${upper_devicename} IP
    ssid:
      name: ${upper_devicename} SSID
    bssid:
      name: ${upper_devicename} BSSID

sensor:
  - platform: wifi_signal
    name: ${upper_devicename} RSSI
    update_interval: 300s
    
light:
  - platform: neopixelbus
    method: ESP8266_UART1
    type: GRB
    pin: 2
    num_leds: 1
    name: ${upper_devicename}
    id: busylight
